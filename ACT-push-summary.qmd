---
title: "ACT push summary"
author: "Mike O'Brien"
format:
  html:
    self-contained: true
editor: visual
execute:
  echo: false
---

```{r packages, message=FALSE}
library(targets)
library(data.table)
library(sf)
library(ggplot2)
library(gt)
```

```{r matos-read}
matos <- tar_read(matos_matched)

matos <- lapply(matos, fread, na.strings = '')
matos <- rbindlist(matos)
```

```{r upload-tims}
upload_time <- tar_meta(starts_with('matos'),
                    fields = c('time', 'path')) |> 
  as.data.table() |> 
  DT(grepl('qualified', path), file.info(as.character(path))$ctime)
```

```{r n-pis}
#| warning: false

pis <-  unique(matos, by = c('trackercode', 'tag_contact_pi')) |> 
  DT(, ':='(PI = strsplit(tag_contact_pi, ' \\(|\\)(, )?'),
            POC = strsplit(tag_contact_poc, ' \\(|\\)(, )?'))) |>
  DT(, ':='(PI = lapply(X = PI, function(.) .[!grepl('@', .)]),
            POC = lapply(X = POC, function(.) .[!grepl('@', .)]),
            PI_emails = lapply(X = PI, function(.) .[grepl('@', .)]),
            POC_emails = lapply(X = POC, function(.) .[grepl('@', .)]))) |> 
  DT(, ':='(PI = unlist(lapply(X = PI,
                               function(.) paste(., collapse = ', '))),
            POC = unlist(lapply(X = POC,
                                function(.) paste(., collapse = ', '))),
            emails = t(mapply(c, PI_emails, POC_emails)))) |> 
  DT(, emails := unlist(
    lapply(
      lapply(emails, unique),
      paste, collapse = '\n')))

```

```{r}
projects <- unique(matos$trackercode)
projects <- gsub('OTN.', '', projects)
projects <- gsub('PROJ', 'ACT.PROJ', projects)

table_name <- c('otn_resources_metadata_points',
                'project_metadata')

otn_metadata_query <- paste0("https://members.oceantrack.org/geoserver/otn/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=otn:",
                             table_name,
                             "&outputFormat=csv&CQL_FILTER=collectioncode IN (",
                             paste("\'", projects, "\'", collapse = ",", sep = ''),
                    ")") |> 
  URLencode()

otn_tables <- lapply(otn_metadata_query, fread)

otn_tables <- lapply(otn_tables, function(.) .[!grepl('^[FA]', collectioncode), collectioncode := paste0('OTN.', collectioncode)])
```

These are data related to the July 2022 ACT/MATOS data push. New matched detection files (["qualified" files](https://members.oceantrack.org/data/otn-detection-extract-documentation-matched-to-animals#autotoc-item-autotoc-2)) were uploaded between `r format(min(upload_time),'%H:%M:%S')` and `r format(max(upload_time),'%H:%M:%S')` on `r format(min(upload_time),'%B %d')`.

A total of `r format(nrow(matos), big.mark = ',')` detections of `r uniqueN(matos, by  = 'fieldnumber')` individuals were matched via [ACT/MATOS](https://matos.asascience.com/project/detail/192) and [OTN](https://members.oceantrack.org/OTN/project?ccode=ACT.PROJ192) across `r uniqueN(matos, by = 'trackercode')` different projects consisting of `r length(unique(unlist(strsplit(pis$PI, ',\\s?'))))` principal investigators.

```{r}
mt <- merge(
  matos[, .(detections = .N), by = 'trackercode'],
  unique(matos, by  = 'fieldnumber')[, .(individuals = .N), by = 'trackercode']
)

mt <- merge(mt, pis[, .(trackercode, PI, POC, emails)])
mt[, trackercode := ifelse(grepl('^PROJ', trackercode), 
                           paste0('ACT.', trackercode), trackercode)]

mt <- merge(mt, otn_tables[[1]][, .(resource_full_name, trackercode = collectioncode)])

mt[, ':='(network = gsub('\\..*', '', trackercode),
          code = gsub('.*\\.', '', trackercode),
          trackercode = NULL,
          PI = fifelse(PI == 'NA', '', PI),
          POC = fifelse(POC == 'NA', '', POC))]

mt <- mt[, .(PI, POC, resource_full_name, network, code, detections, individuals, emails)]
setnames(mt, c('PIs', 'POC', 'Project name', 'Network', 'Project code', 'Detections', 'Individuals', 'Contact info'))

setorder(mt, -'Detections', -'Individuals')

gt(mt) |>
  tab_header(title = 'OTN matches') |>
  as_raw_html()
```

```{r}
otn_sf <- otn_tables[[1]] |> 
  data.frame() |> 
  st_as_sf(wkt = 'the_geom', crs = 4326)


natural_earth <- st_read(tar_read('natural_earth'), quiet = T)

ggplot() +
  geom_sf(data = natural_earth) +
  geom_sf(data = otn_sf, fill = NA) +
  coord_sf(xlim = c(-85, 0), ylim = c(26, 50)) +
  labs(title = 'Geographic extent of detected projects') +
  theme_minimal()
```

```{r}
station_summary <- merge(
  matos[, .(detections = .N), by = 'station'],
  unique(matos, by  = c('fieldnumber', 'station'))[, .(individuals = .N), by = 'station']
)

station_summary[, station := factor(station,
                                 levels = c(paste0('FS0', 6:1),
                                               'MILL', 'GRGTN', 'PHIPP-E', 'PHIPP',
                                               'DPL', 'MMM', 'BIW02', 'BIW01', 'SAS',
                                               'NBATH'),
                                 ordered = T)]
setnames(station_summary, c('Station', 'Detections', 'Individuals'))
setorder(station_summary, -Station)

station_summary |> 
  gt() |> 
  tab_header(title = 'Records by Kennebec receivers') |> 
  tab_footnote('statons listed from north to south',
                locations = cells_title()) |> 
  as_raw_html()
```

```{r}
maine <- st_read(tar_read('maine_polygon'), quiet = T)

tar_load(station_key)
station_spatial <- unique(station_key, by = 'stationname') |> 
  DT(station_summary, ,on = c('stationname'= 'Station')) |> 
  data.frame() |> 
  st_as_sf(coords = c('deploy_long', 'deploy_lat'), crs = 4326)

## need spatial for station
ggplot() +
  geom_sf(data = maine) +
  geom_sf(data = station_spatial, aes(size = Detections, color = Individuals)) +
  labs(subtitle = 'Records by Kennebec receivers') +
  scale_color_viridis_c() +
  coord_sf(xlim = c(430000, 440000), ylim = c(4838500, 4865000)) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
